// <auto-generated />
using System;
using EncoraTestBLL.DLL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EncoraTestBLL.Migrations
{
    [DbContext(typeof(EncoraTestContext))]
    partial class EncoraTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EncoraTestBLL.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zip")
                        .HasColumnType("int");

                    b.Property<string>("ZipPlus4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.ApplianceOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dishwasher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dryer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Microwave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refrigerator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Washer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplianceOwnership");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Audio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Audio");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Diligence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("Diligence");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Financial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("CapRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsCashOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSection8")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LeaseEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeaseStartDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("ListPrice")
                        .HasColumnType("real");

                    b.Property<float?>("MarketValue")
                        .HasColumnType("real");

                    b.Property<float?>("MonthlyHoa")
                        .HasColumnType("real");

                    b.Property<float?>("MonthlyManagementFees")
                        .HasColumnType("real");

                    b.Property<float>("MonthlyRent")
                        .HasColumnType("real");

                    b.Property<float?>("NetYield")
                        .HasColumnType("real");

                    b.Property<string>("Occupancy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RehabCosts")
                        .HasColumnType("real");

                    b.Property<DateTime?>("RehabDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("SalePrice")
                        .HasColumnType("real");

                    b.Property<float?>("TurnOverFee")
                        .HasColumnType("real");

                    b.Property<float?>("YearlyInsuranceCost")
                        .HasColumnType("real");

                    b.Property<float?>("YearlyPropertyTaxes")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Financial");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.GoogleMapOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasStreeView")
                        .HasColumnType("bit");

                    b.Property<int>("PovHeading")
                        .HasColumnType("int");

                    b.Property<long>("PovLatitude")
                        .HasColumnType("bigint");

                    b.Property<long>("PovLongitude")
                        .HasColumnType("bigint");

                    b.Property<int>("PovPitch")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoogleMapOption");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Lease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplianceOwnershipId")
                        .HasColumnType("int");

                    b.Property<int?>("LeaseSummaryId")
                        .HasColumnType("int");

                    b.Property<int?>("UtilitiesOwnershipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplianceOwnershipId");

                    b.HasIndex("LeaseSummaryId");

                    b.HasIndex("UtilitiesOwnershipId");

                    b.ToTable("Lease");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.LeaseSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsLeaseConcessions")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPetsDeposit")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRentersInsuranceRequired")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSection8")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTenantBackgroudChecked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTenantIncomeAbove3x")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTenantMayTerminateEarly")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTenantPurchaseOption")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LeaseEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeaseStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeasingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketedRent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MonthlyRent")
                        .HasColumnType("real");

                    b.Property<string>("Occupancy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PetsDepositAmount")
                        .HasColumnType("real");

                    b.Property<float?>("SecurityDepositAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("LeaseSummary");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId1")
                        .HasColumnType("int");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SizeInByte")
                        .HasColumnType("bigint");

                    b.Property<string>("TextContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlMedium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSmall")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ResourceId1");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Physical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("BathRooms")
                        .HasColumnType("real");

                    b.Property<string>("BedRooms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPool")
                        .HasColumnType("bit");

                    b.Property<float?>("LotSize")
                        .HasColumnType("real");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SquareFeet")
                        .HasColumnType("real");

                    b.Property<int?>("Stories")
                        .HasColumnType("int");

                    b.Property<int?>("Units")
                        .HasColumnType("int");

                    b.Property<int?>("YearBuilt")
                        .HasColumnType("int");

                    b.Property<int?>("ZipYearBuilt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Physical");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Property", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<bool?>("AllowRentGuaranteedOptout")
                        .HasColumnType("bit");

                    b.Property<string>("AllowableSaleTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllowedFundingTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerAccountId")
                        .HasColumnType("int");

                    b.Property<string>("CertificationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DaysOnMarket")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiligenceVaultSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EscrowClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<string>("FeaturedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinancialId")
                        .HasColumnType("int");

                    b.Property<int?>("GoogleMapOptionId")
                        .HasColumnType("int");

                    b.Property<bool?>("HasAudio")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiligenceVaultDocuments")
                        .HasColumnType("bit");

                    b.Property<string>("Highlights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAllowOffer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAllowPreview")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBargain")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDiligenceVaultUnlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDwellCertified")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFeature")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHoa")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHot")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPropertyManagerOfferRetain")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRentGuaranteed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSecuritized")
                        .HasColumnType("bit");

                    b.Property<long?>("Latitude")
                        .HasColumnType("bigint");

                    b.Property<int?>("LeaseId")
                        .HasColumnType("int");

                    b.Property<long?>("Longitude")
                        .HasColumnType("bigint");

                    b.Property<string>("MainImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalProperties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhysicalId")
                        .HasColumnType("int");

                    b.Property<string>("PriceVisibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<int?>("ScoreId")
                        .HasColumnType("int");

                    b.Property<string>("Seller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerBroker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ValuationId")
                        .HasColumnType("int");

                    b.Property<string>("Visibility")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("FinancialId");

                    b.HasIndex("GoogleMapOptionId");

                    b.HasIndex("LeaseId");

                    b.HasIndex("PhysicalId");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ScoreId");

                    b.HasIndex("ValuationId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConditionScore")
                        .HasColumnType("int");

                    b.Property<string>("CrimeScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FloodRiskScore")
                        .HasColumnType("int");

                    b.Property<int?>("NeighborhoodScore")
                        .HasColumnType("int");

                    b.Property<int?>("OverallScore")
                        .HasColumnType("int");

                    b.Property<int?>("QualityScore")
                        .HasColumnType("int");

                    b.Property<string>("SchoolScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WalkabilityScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.ThreeDRendering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("ThreeDRendering");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.UtilitiesOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Electric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Garbage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Landscaping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PestControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Water")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UtilitiesOwnership");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Valuation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("AvmBpoAdjValue")
                        .HasColumnType("real");

                    b.Property<DateTime?>("AvmBpoDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("AvmBpoValue")
                        .HasColumnType("real");

                    b.Property<DateTime?>("RsAvmDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("RsAvmValue")
                        .HasColumnType("real");

                    b.Property<float?>("RsBpoMergeValue")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Valuation");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Audio", b =>
                {
                    b.HasOne("EncoraTestBLL.Models.Resource", null)
                        .WithMany("Audios")
                        .HasForeignKey("ResourceId");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Diligence", b =>
                {
                    b.HasOne("EncoraTestBLL.Models.Property", null)
                        .WithMany("Diligences")
                        .HasForeignKey("PropertyId");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Lease", b =>
                {
                    b.HasOne("EncoraTestBLL.Models.ApplianceOwnership", "ApplianceOwnership")
                        .WithMany()
                        .HasForeignKey("ApplianceOwnershipId");

                    b.HasOne("EncoraTestBLL.Models.LeaseSummary", "LeaseSummary")
                        .WithMany()
                        .HasForeignKey("LeaseSummaryId");

                    b.HasOne("EncoraTestBLL.Models.UtilitiesOwnership", "UtilitiesOwnership")
                        .WithMany()
                        .HasForeignKey("UtilitiesOwnershipId");

                    b.Navigation("ApplianceOwnership");

                    b.Navigation("LeaseSummary");

                    b.Navigation("UtilitiesOwnership");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Photo", b =>
                {
                    b.HasOne("EncoraTestBLL.Models.Resource", null)
                        .WithMany("FloorPlans")
                        .HasForeignKey("ResourceId");

                    b.HasOne("EncoraTestBLL.Models.Resource", null)
                        .WithMany("Photos")
                        .HasForeignKey("ResourceId1");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Property", b =>
                {
                    b.HasOne("EncoraTestBLL.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("EncoraTestBLL.Models.Financial", "Financial")
                        .WithMany()
                        .HasForeignKey("FinancialId");

                    b.HasOne("EncoraTestBLL.Models.GoogleMapOption", "GoogleMapOption")
                        .WithMany()
                        .HasForeignKey("GoogleMapOptionId");

                    b.HasOne("EncoraTestBLL.Models.Lease", "Lease")
                        .WithMany()
                        .HasForeignKey("LeaseId");

                    b.HasOne("EncoraTestBLL.Models.Physical", "Physical")
                        .WithMany()
                        .HasForeignKey("PhysicalId");

                    b.HasOne("EncoraTestBLL.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId");

                    b.HasOne("EncoraTestBLL.Models.Score", "Score")
                        .WithMany()
                        .HasForeignKey("ScoreId");

                    b.HasOne("EncoraTestBLL.Models.Valuation", "Valuation")
                        .WithMany()
                        .HasForeignKey("ValuationId");

                    b.Navigation("Address");

                    b.Navigation("Financial");

                    b.Navigation("GoogleMapOption");

                    b.Navigation("Lease");

                    b.Navigation("Physical");

                    b.Navigation("Resource");

                    b.Navigation("Score");

                    b.Navigation("Valuation");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.ThreeDRendering", b =>
                {
                    b.HasOne("EncoraTestBLL.Models.Resource", null)
                        .WithMany("ThreeDRenderings")
                        .HasForeignKey("ResourceId");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Property", b =>
                {
                    b.Navigation("Diligences");
                });

            modelBuilder.Entity("EncoraTestBLL.Models.Resource", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("FloorPlans");

                    b.Navigation("Photos");

                    b.Navigation("ThreeDRenderings");
                });
#pragma warning restore 612, 618
        }
    }
}
